/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package backgammon;

import java.io.*;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JToggleButton;

/**
 *
 * @author yahya
 */
public class Board extends javax.swing.JFrame {

    /**
     * Creates new form Board
     */
    JLabel labels[] = new JLabel[24];
    JToggleButton buttons[] = new JToggleButton[24];

    public boolean dosyakontrol(Dosya d) throws IOException {

        return true;

    }

    public Board() throws IOException {

        initComponents();
        Tahta t = new Tahta();
        Konum[] a = new Konum[24];
        a = t.konumciz();

        labels[0] = numara1;
        labels[1] = numara2;
        labels[2] = numara3;
        labels[3] = numara4;
        labels[4] = numara5;
        labels[5] = numara6;
        labels[6] = numara7;
        labels[7] = numara8;
        labels[8] = numara9;
        labels[9] = numara10;
        labels[10] = numara11;
        labels[11] = numara12;
        labels[12] = numara13;
        labels[13] = numara14;
        labels[14] = numara15;
        labels[15] = numara16;
        labels[16] = numara17;
        labels[17] = numara18;
        labels[18] = numara19;
        labels[19] = numara20;
        labels[20] = numara21;
        labels[21] = numara22;
        labels[22] = numara23;
        labels[23] = numara24;
        buttons[0] = buton1;
        buttons[1] = buton2;
        buttons[2] = buton3;
        buttons[3] = buton4;
        buttons[4] = buton5;
        buttons[5] = buton6;
        buttons[6] = buton7;
        buttons[7] = buton8;
        buttons[8] = buton9;
        buttons[9] = buton10;
        buttons[10] = buton11;
        buttons[11] = buton12;
        buttons[12] = buton13;
        buttons[13] = buton14;
        buttons[14] = buton15;
        buttons[15] = buton16;
        buttons[16] = buton17;
        buttons[17] = buton18;
        buttons[18] = buton19;
        buttons[19] = buton20;
        buttons[20] = buton21;
        buttons[21] = buton22;
        buttons[22] = buton23;
        buttons[23] = buton24;
        Dosya d = new Dosya();

        for (int i = 0; i < a.length; i++) {
            String tassayisi = String.valueOf(a[i].getTassayisi());
            String tasrengi = a[i].getT().getTasrengi();

            labels[i].setText(tassayisi + " " + tasrengi);
            buttons[i].setText(tassayisi + " " + tasrengi);

        }
        String konumlar = "";
        for (int i = 0; i < buttons.length; i++) {
            konumlar += "\n" + buttons[i].getText() + "\n";
        }
        d.kayitsizyaz("konum.", konumlar);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        buton1 = new javax.swing.JToggleButton();
        ZarAtbuton = new javax.swing.JButton();
        zar1 = new javax.swing.JLabel();
        zar2 = new javax.swing.JLabel();
        zar1label = new javax.swing.JLabel();
        zar2label = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        numara1 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        sirakimde = new javax.swing.JLabel();
        numara2 = new javax.swing.JLabel();
        numara3 = new javax.swing.JLabel();
        numara4 = new javax.swing.JLabel();
        numara5 = new javax.swing.JLabel();
        numara6 = new javax.swing.JLabel();
        numara7 = new javax.swing.JLabel();
        numara8 = new javax.swing.JLabel();
        numara9 = new javax.swing.JLabel();
        numara10 = new javax.swing.JLabel();
        numara11 = new javax.swing.JLabel();
        numara12 = new javax.swing.JLabel();
        numara13 = new javax.swing.JLabel();
        numara14 = new javax.swing.JLabel();
        numara15 = new javax.swing.JLabel();
        numara16 = new javax.swing.JLabel();
        numara17 = new javax.swing.JLabel();
        numara18 = new javax.swing.JLabel();
        numara19 = new javax.swing.JLabel();
        numara20 = new javax.swing.JLabel();
        numara21 = new javax.swing.JLabel();
        numara22 = new javax.swing.JLabel();
        numara23 = new javax.swing.JLabel();
        numara24 = new javax.swing.JLabel();
        buton2 = new javax.swing.JToggleButton();
        buton3 = new javax.swing.JToggleButton();
        buton4 = new javax.swing.JToggleButton();
        buton5 = new javax.swing.JToggleButton();
        buton6 = new javax.swing.JToggleButton();
        buton7 = new javax.swing.JToggleButton();
        buton8 = new javax.swing.JToggleButton();
        buton9 = new javax.swing.JToggleButton();
        buton10 = new javax.swing.JToggleButton();
        buton11 = new javax.swing.JToggleButton();
        buton12 = new javax.swing.JToggleButton();
        buton13 = new javax.swing.JToggleButton();
        buton14 = new javax.swing.JToggleButton();
        buton15 = new javax.swing.JToggleButton();
        buton16 = new javax.swing.JToggleButton();
        buton17 = new javax.swing.JToggleButton();
        buton18 = new javax.swing.JToggleButton();
        buton19 = new javax.swing.JToggleButton();
        buton20 = new javax.swing.JToggleButton();
        buton21 = new javax.swing.JToggleButton();
        buton22 = new javax.swing.JToggleButton();
        buton23 = new javax.swing.JToggleButton();
        buton24 = new javax.swing.JToggleButton();
        kirikbeyazsayisi = new javax.swing.JLabel();
        kiriksiyahsayisi = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        kalanhamlelabel = new javax.swing.JLabel();
        toplamabutonu = new javax.swing.JButton();
        toplananbeyazlar = new javax.swing.JLabel();
        toplanansiyahlar = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 204, 153));

        buton1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        buton1.setName("1"); // NOI18N
        buton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buton1MouseClicked(evt);
            }
        });
        buton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buton1ActionPerformed(evt);
            }
        });

        ZarAtbuton.setText("zar at");
        ZarAtbuton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ZarAtbutonActionPerformed(evt);
            }
        });

        zar1.setText("zar1");

        zar2.setText("zar2");

        zar1label.setText("-");

        zar2label.setText("-");

        jLabel1.setText("kırık siyahlar");

        jLabel4.setText("toplanan siyahlar");

        jLabel2.setText("kırık beyazlar");

        jLabel3.setText("toplanan beyazlar");

        numara1.setText("-");
        numara1.setName("1"); // NOI18N

        jLabel6.setText("sıra :");

        sirakimde.setText("-");

        numara2.setText("-");
        numara2.setName("2"); // NOI18N

        numara3.setText("-");
        numara3.setName("3"); // NOI18N

        numara4.setText("-");
        numara4.setName("4"); // NOI18N

        numara5.setText("-");
        numara5.setName("5"); // NOI18N

        numara6.setText("-");
        numara6.setName("6"); // NOI18N

        numara7.setText("-");

        numara8.setText("-");

        numara9.setText("-");

        numara10.setText("-");

        numara11.setText("-");

        numara12.setText("-");

        numara13.setText("-");

        numara14.setText("-");

        numara15.setText("-");

        numara16.setText("-");

        numara17.setText("-");

        numara18.setText("-");

        numara19.setText("-");

        numara20.setText("-");

        numara21.setText("-");

        numara22.setText("-");

        numara23.setText("-");

        numara24.setText("-");

        buton2.setName("2"); // NOI18N
        buton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buton2ActionPerformed(evt);
            }
        });

        buton3.setName("3"); // NOI18N
        buton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buton3ActionPerformed(evt);
            }
        });

        buton4.setName("4"); // NOI18N
        buton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buton4ActionPerformed(evt);
            }
        });

        buton5.setName("5"); // NOI18N
        buton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buton5ActionPerformed(evt);
            }
        });

        buton6.setName("6"); // NOI18N
        buton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buton6ActionPerformed(evt);
            }
        });

        buton7.setName("7"); // NOI18N
        buton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buton7ActionPerformed(evt);
            }
        });

        buton8.setName("8"); // NOI18N
        buton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buton8ActionPerformed(evt);
            }
        });

        buton9.setName("9"); // NOI18N
        buton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buton9ActionPerformed(evt);
            }
        });

        buton10.setName("10"); // NOI18N
        buton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buton10ActionPerformed(evt);
            }
        });

        buton11.setName("11"); // NOI18N
        buton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buton11ActionPerformed(evt);
            }
        });

        buton12.setName("12"); // NOI18N
        buton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buton12ActionPerformed(evt);
            }
        });

        buton13.setName("13"); // NOI18N
        buton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buton13ActionPerformed(evt);
            }
        });

        buton14.setName("14"); // NOI18N
        buton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buton14ActionPerformed(evt);
            }
        });

        buton15.setName("15"); // NOI18N
        buton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buton15ActionPerformed(evt);
            }
        });

        buton16.setName("16"); // NOI18N
        buton16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buton16ActionPerformed(evt);
            }
        });

        buton17.setName("17"); // NOI18N
        buton17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buton17ActionPerformed(evt);
            }
        });

        buton18.setName("18"); // NOI18N
        buton18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buton18ActionPerformed(evt);
            }
        });

        buton19.setName("19"); // NOI18N
        buton19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buton19ActionPerformed(evt);
            }
        });

        buton20.setName("20"); // NOI18N
        buton20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buton20ActionPerformed(evt);
            }
        });

        buton21.setName("21"); // NOI18N
        buton21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buton21ActionPerformed(evt);
            }
        });

        buton22.setName("22"); // NOI18N
        buton22.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buton22ActionPerformed(evt);
            }
        });

        buton23.setName("23"); // NOI18N
        buton23.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buton23ActionPerformed(evt);
            }
        });

        buton24.setName("24"); // NOI18N
        buton24.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buton24ActionPerformed(evt);
            }
        });

        kirikbeyazsayisi.setText("-");

        kiriksiyahsayisi.setText("-");

        jLabel5.setText("kalan hamle");

        kalanhamlelabel.setText("-");

        toplamabutonu.setText("topla");
        toplamabutonu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toplamabutonuActionPerformed(evt);
            }
        });

        toplananbeyazlar.setText("-");

        toplanansiyahlar.setText("-");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(numara12, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(numara11, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(numara10, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(numara9, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(numara8, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(numara7, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(numara13, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(numara14, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(numara15, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(numara16, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(numara17, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(numara18, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(buton12, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(buton11, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(buton10, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buton9, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(buton8, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(buton7, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(buton13, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buton14, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(buton15, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(14, 14, 14)
                        .addComponent(buton16, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(buton17, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(buton18, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(kiriksiyahsayisi, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(108, 108, 108)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(toplanansiyahlar)
                            .addComponent(jLabel4))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(numara19, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(numara20, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(numara21, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(numara22, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(numara23, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(numara24, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(numara6, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(numara5, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(numara4, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(numara3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(numara2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(buton6, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(buton5, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 10)
                                .addComponent(buton4, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(buton3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 10)
                                .addComponent(buton2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(numara1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(buton1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(buton19, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(buton20, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(buton21, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(buton22, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(buton23, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(buton24, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(kirikbeyazsayisi, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(107, 107, 107)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(toplananbeyazlar)
                            .addComponent(jLabel3))))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(ZarAtbuton, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(zar1label, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(38, 38, 38)
                                .addComponent(zar2label, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(zar1)
                                .addGap(38, 38, 38)
                                .addComponent(zar2))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(18, 18, 18)
                                .addComponent(sirakimde, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(kalanhamlelabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(toplamabutonu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(numara1)
                    .addComponent(numara2)
                    .addComponent(numara3)
                    .addComponent(numara4)
                    .addComponent(numara5)
                    .addComponent(numara6)
                    .addComponent(numara7)
                    .addComponent(numara8)
                    .addComponent(numara9)
                    .addComponent(numara10)
                    .addComponent(numara11)
                    .addComponent(numara12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(buton1, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(ZarAtbuton)
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(zar1)
                                    .addComponent(zar2))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(zar1label)
                                    .addComponent(zar2label))))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(sirakimde)))
                    .addComponent(buton2, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buton3, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buton4, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buton5, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buton6, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buton12, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buton11, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buton10, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buton9, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buton8, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buton7, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(numara13)
                    .addComponent(numara14)
                    .addComponent(numara15)
                    .addComponent(numara16)
                    .addComponent(numara17)
                    .addComponent(numara18)
                    .addComponent(numara19)
                    .addComponent(numara20)
                    .addComponent(numara21)
                    .addComponent(numara22)
                    .addComponent(numara23)
                    .addComponent(numara24))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(buton13, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buton14, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buton15, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buton16, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buton17, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buton18, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buton19, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buton20, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buton21, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buton22, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buton23, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buton24, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(kalanhamlelabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(toplamabutonu)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(kirikbeyazsayisi)
                        .addComponent(toplanansiyahlar))
                    .addComponent(kiriksiyahsayisi)
                    .addComponent(toplananbeyazlar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    int zaratimsayisi = 0;
    private void ZarAtbutonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ZarAtbutonActionPerformed
        zaratimsayisi++;
        Zar z = new Zar();
        int zar1 = z.ZarAt();
        int zar2 = z.ZarAt();
        zar1label.setText(Integer.toString(zar1));
        zar2label.setText(Integer.toString(zar2));
        if (tiksayisi == 0) {
            if (zar1 > zar2) {
                sirakimde.setText("beyaz");
                tiksayisi++;
            } else if (zar1 < zar2) {
                sirakimde.setText("siyah");
                tiksayisi++;
            } else {
                zar1 = z.ZarAt();
                zar2 = z.ZarAt();
            }

        } else if (sirakimde.getText().equals("siyah")) {
            sirakimde.setText("beyaz");
        } else {
            sirakimde.setText("siyah");
        }
        if (zar1label.getText().equals(zar2label.getText())) {
            kalanhamlelabel.setText("4");
        } else {
            kalanhamlelabel.setText("2");
        }
        Dosya d = new Dosya();
        String yazilacaktext = ("sıra: " + sirakimde.getText() + " gelen zarlar : " + zar1label.getText() + "--" + zar2label.getText() + " hamle sayisi: " + kalanhamlelabel.getText() + "\n");
        try {
            d.yaz("hareketler.", yazilacaktext);
        } catch (IOException ex) {
            Logger.getLogger(Board.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_ZarAtbutonActionPerformed

    private void buton24ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buton24ActionPerformed
        try {
            secimKontrol(buton24);
        } catch (IOException ex) {
            Logger.getLogger(Board.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_buton24ActionPerformed

    private void buton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buton1ActionPerformed
        try {
            secimKontrol(buton1);
//        deneme(Integer.parseInt(buton1.getName()));
//        System.out.println(buton1.getText());
        } catch (IOException ex) {
            Logger.getLogger(Board.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_buton1ActionPerformed

    private void buton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buton2ActionPerformed
        try {
            secimKontrol(buton2);
        } catch (IOException ex) {
            Logger.getLogger(Board.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_buton2ActionPerformed

    private void buton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buton1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_buton1MouseClicked

    private void buton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buton3ActionPerformed
        try {
            secimKontrol(buton3);
        } catch (IOException ex) {
            Logger.getLogger(Board.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_buton3ActionPerformed

    private void buton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buton4ActionPerformed
        try {
            secimKontrol(buton4);
        } catch (IOException ex) {
            Logger.getLogger(Board.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_buton4ActionPerformed

    private void buton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buton6ActionPerformed
        try {
            secimKontrol(buton6);
        } catch (IOException ex) {
            Logger.getLogger(Board.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_buton6ActionPerformed

    private void buton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buton7ActionPerformed
        try {
            secimKontrol(buton7);
        } catch (IOException ex) {
            Logger.getLogger(Board.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_buton7ActionPerformed

    private void buton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buton5ActionPerformed
        try {
            secimKontrol(buton5);
        } catch (IOException ex) {
            Logger.getLogger(Board.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_buton5ActionPerformed

    private void buton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buton8ActionPerformed
        try {
            secimKontrol(buton8);
        } catch (IOException ex) {
            Logger.getLogger(Board.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_buton8ActionPerformed

    private void buton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buton9ActionPerformed
        try {
            secimKontrol(buton9);
        } catch (IOException ex) {
            Logger.getLogger(Board.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_buton9ActionPerformed

    private void buton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buton10ActionPerformed
        try {
            secimKontrol(buton10);
        } catch (IOException ex) {
            Logger.getLogger(Board.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_buton10ActionPerformed

    private void buton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buton11ActionPerformed
        try {
            secimKontrol(buton11);
        } catch (IOException ex) {
            Logger.getLogger(Board.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_buton11ActionPerformed

    private void buton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buton12ActionPerformed
        try {
            secimKontrol(buton12);
        } catch (IOException ex) {
            Logger.getLogger(Board.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_buton12ActionPerformed

    private void buton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buton13ActionPerformed
        try {
            secimKontrol(buton13);
        } catch (IOException ex) {
            Logger.getLogger(Board.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_buton13ActionPerformed

    private void buton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buton14ActionPerformed
        try {
            secimKontrol(buton14);
        } catch (IOException ex) {
            Logger.getLogger(Board.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_buton14ActionPerformed

    private void buton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buton15ActionPerformed
        try {
            secimKontrol(buton15);
        } catch (IOException ex) {
            Logger.getLogger(Board.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_buton15ActionPerformed

    private void buton16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buton16ActionPerformed
        try {
            secimKontrol(buton16);
        } catch (IOException ex) {
            Logger.getLogger(Board.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_buton16ActionPerformed

    private void buton17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buton17ActionPerformed
        try {
            secimKontrol(buton17);
        } catch (IOException ex) {
            Logger.getLogger(Board.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_buton17ActionPerformed

    private void buton18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buton18ActionPerformed
        try {
            secimKontrol(buton18);
        } catch (IOException ex) {
            Logger.getLogger(Board.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_buton18ActionPerformed

    private void buton19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buton19ActionPerformed
        try {
            secimKontrol(buton19);
        } catch (IOException ex) {
            Logger.getLogger(Board.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_buton19ActionPerformed

    private void buton20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buton20ActionPerformed
        try {
            secimKontrol(buton20);
        } catch (IOException ex) {
            Logger.getLogger(Board.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_buton20ActionPerformed

    private void buton21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buton21ActionPerformed
        try {
            secimKontrol(buton21);
        } catch (IOException ex) {
            Logger.getLogger(Board.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_buton21ActionPerformed

    private void buton22ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buton22ActionPerformed
        try {
            secimKontrol(buton22);
        } catch (IOException ex) {
            Logger.getLogger(Board.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_buton22ActionPerformed

    private void buton23ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buton23ActionPerformed
        try {
            secimKontrol(buton23);
        } catch (IOException ex) {
            Logger.getLogger(Board.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_buton23ActionPerformed

    private void toplamabutonuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toplamabutonuActionPerformed
        if(toplamakontrol()){
            
        }
    }//GEN-LAST:event_toplamabutonuActionPerformed

    public boolean toplamakontrol() {

        if (sirakimde.getText().equals("siyah")) {
            for (int i = 0; i < 18; i++) {
                String[] buttonlar = buttons[i].getText().split(" ");
                if (buttonlar.length == 1) {
                    continue;
                } else if (buttons[i].getText().split(" ")[1].equals("siyah")) {
                    JOptionPane.showMessageDialog(rootPane, "toplamak için tüm taşları gerekli yere çekin!");
                    return false;
                } else if (buttons[Integer.valueOf(zar1label.getText()) - 1].isSelected() || buttons[Integer.valueOf(zar2label.getText()) - 1].isSelected()) {
                    int toplanansiyah = 0;
                    if (toplanansiyahlar.getText().equals("-")) {
                        toplanansiyah = 0;
                    } else {
                        toplanansiyah = Integer.valueOf(toplanansiyahlar.getText());
                    }
                    toplanansiyah++;
                    buttons[i].getText().split(" ")[0]=String.valueOf(Integer.parseInt(buttons[i].getText().split(" ")[0])-1);
                    toplanansiyahlar.setText(String.valueOf(toplanansiyahlar));
                }
            }
        }else{
            if (sirakimde.getText().equals("beyaz")) {
            for (int i = 6; i < 24; i++) {
                String[] buttonlar = buttons[i].getText().split(" ");
                if (buttonlar.length == 1) {
                    continue;
                } else if (buttons[i].getText().split(" ")[1].equals("siyah")) {
                    JOptionPane.showMessageDialog(rootPane, "toplamak için tüm taşları gerekli yere çekin!");
                    return true;
                } else if (buttons[Integer.valueOf(zar1label.getText()) - 1].isSelected() || buttons[Integer.valueOf(zar2label.getText()) - 1].isSelected()) {
                    int toplanansiyah = 0;
                    if (toplanansiyahlar.getText().equals("-")) {
                        toplanansiyah = 0;
                    } else {
                        toplanansiyah = Integer.valueOf(toplanansiyahlar.getText());
                    }
                    toplanansiyah++;
                    toplanansiyahlar.setText(String.valueOf(toplanansiyahlar));
                }

            }
        } 
    }
        return false;
    }
    public int tiksayisi = 0;

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Board.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Board.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Board.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Board.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new Board().setVisible(true);
                } catch (IOException ex) {
                    Logger.getLogger(Board.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }
    int secilensayisi = 0;
    int secilenilkelemanid = 0;
    String ilksira = "";
    int tempforsecilenid = 0;

    public void secimKontrol(JToggleButton b) throws IOException {
        Dosya d = new Dosya();
        if (b.isSelected()) {
            if (!zarkontrol()) {
                JOptionPane.showMessageDialog(null, "sıra belirlemek adına zar atmalısınız !");
            }
            int tempforasd = 0;
            if (secilensayisi == 0) {
                if (kirikkontrol(sirakimde.getText())) {// kırık varsa true 
                    kiriklihareket(b);
                }
                if (buttonkontrol(b)) {
                    if (b.getText().split(" ")[1].equals(sirakimde.getText())) {
                        secilenilkelemanid = Integer.parseInt(b.getName()) - 1;
                        secilensayisi++;
                        // System.out.println("eşitler");
                    } else {
                        JOptionPane.showMessageDialog(rootPane, "sıra sizde değil");
                        butonsifirla();
                    }
                } else {
                    JOptionPane.showMessageDialog(rootPane, "seçtiğiniz alanda herhangi bir taş yok");
                    butonsifirla();
                }

            } else // seçilen sayisi 0 dan farklı ise
            {
                String[] ilkbutonbilgiler = buttons[secilenilkelemanid].getText().split(" ");
                int ilkbutonelemanlari = Integer.parseInt(ilkbutonbilgiler[0]);
                if (buttonkontrol(b)) { // true döndü çünkü içinde renki eleman var ikinci seçilen buton

                    String[] ikincibutonbilgiler = b.getText().split(" ");

                    int ikincibutonelemanlari = Integer.parseInt(ikincibutonbilgiler[0]);
                    if (ilkbutonbilgiler[1].equals(ikincibutonbilgiler[1])) {//renkleri aynı mı
                        // ilk butondaki eleman sayısı kontrolü

                        if (ilkbutonelemanlari == 1) {// ilk butonda tek eleman varsa
                            ilkbutonelemanlari = 0;
                            // text ayarlama
                            if (hareketkontrol(Integer.parseInt(zar1label.getText()), Integer.parseInt(zar2label.getText()), buttons[secilenilkelemanid], b)) {
                                buttons[secilenilkelemanid].setText("0");
                                labels[secilenilkelemanid].setText("0");
                                b.setText(String.valueOf(ikincibutonelemanlari + 1) + " " + ikincibutonbilgiler[1]);
                                labels[Integer.parseInt(b.getName()) - 1].setText(String.valueOf(ikincibutonelemanlari + 1) + " " + ikincibutonbilgiler[1]);
                                butonsifirla();
                                secilensayisi = 0;
                                tempforsecilenid = secilenilkelemanid + 1;
                                String yazilacaktext = ("hareket: " + tempforsecilenid + " konumundan " + b.getName() + " konumuna gerçekleşmişir\n");
                                try {
                                    d.yaz("hareketler.", yazilacaktext);
                                } catch (IOException ex) {
                                    Logger.getLogger(Board.class.getName()).log(Level.SEVERE, null, ex);
                                }
                            } else {
                                JOptionPane.showMessageDialog(null, "geçersiz hamle");
                                String yazilacaktext = ("hareket geçersizdir \n");
                                try {
                                    d.yaz("hareketler.", yazilacaktext);
                                } catch (IOException ex) {
                                    Logger.getLogger(Board.class.getName()).log(Level.SEVERE, null, ex);
                                }
                                butonsifirla();
                                secilensayisi = 0;
                            }
                            // ikinci elemanın text ayarı

                        } else { // EĞER ilk butonda birden fazla eleman varsa
                            ilkbutonelemanlari--;
                            ikincibutonelemanlari++;
                            if (hareketkontrol(Integer.parseInt(zar1label.getText()), Integer.parseInt(zar2label.getText()), buttons[secilenilkelemanid], b)) {
                                buttons[secilenilkelemanid].setText(String.valueOf(ilkbutonelemanlari) + " " + ilkbutonbilgiler[1]);
                                labels[secilenilkelemanid].setText(String.valueOf(ilkbutonelemanlari) + " " + ilkbutonbilgiler[1]);
                                b.setText(String.valueOf(ikincibutonelemanlari) + " " + ikincibutonbilgiler[1]);
                                labels[Integer.parseInt(b.getName()) - 1].setText(String.valueOf(ikincibutonelemanlari) + " " + ikincibutonbilgiler[1]);
                                butonsifirla();
                                secilensayisi = 0;
                                String yazilacaktext = ("hareket: " + tempforsecilenid + " konumundan " + b.getName() + " konumuna gerçekleşmişir.\n");
                                d.yaz("hareketler.", yazilacaktext);
                            } else {
                                JOptionPane.showMessageDialog(null, "geçersiz hamle");
                                butonsifirla();
                                JOptionPane.showMessageDialog(null, "geçersiz hamle");
                                String yazilacaktext = ("hareket geçersizdir \n");
                                try {
                                    d.yaz("hareketler.", yazilacaktext);
                                } catch (IOException ex) {
                                    Logger.getLogger(Board.class.getName()).log(Level.SEVERE, null, ex);
                                }
                                secilensayisi = 0;
                            }

                        }
                    } else // ikinci butonda tek bir tane farklı renkli eleman varsa 
                     if (ikincibutonelemanlari == 1) {
                            // kırma durumu
                            if (ikincibutonbilgiler[1].equals("beyaz")) {
                                if (hareketkontrol(Integer.parseInt(zar1label.getText()), Integer.parseInt(zar2label.getText()), buttons[secilenilkelemanid], b)) {
                                    if (kirikbeyazsayisi.getText().equals("-")) {

                                        kirikbeyazsayisi.setText("1");
                                        b.setText(String.valueOf(1) + " " + "siyah");
                                        labels[Integer.parseInt(b.getName()) - 1].setText(String.valueOf(1) + " " + "siyah");
                                        String yazilacaktext = ("hareket: " + tempforsecilenid + " konumundan " + b.getName() + " konumuna gerçekleşmişir. işlem sonucu beyaz taş kırılmıştır.\n");
                                        d.yaz("hareketler.", yazilacaktext);
                                        if (ilkbutonelemanlari == 1) {// ilk secilende tek bir tane renkli eleman varsa 
                                            buttons[secilenilkelemanid].setText("0");
                                            labels[secilenilkelemanid].setText("0");
                                            yazilacaktext = ("hareket: " + tempforsecilenid + " konumundan " + b.getName() + " konumuna gerçekleşmişir.\n");
                                            d.yaz("hareketler.", yazilacaktext);
                                        } else {
                                            ilkbutonelemanlari--;
                                            buttons[secilenilkelemanid].setText(String.valueOf(ilkbutonelemanlari) + " " + ilkbutonbilgiler[1]);
                                            labels[secilenilkelemanid].setText(String.valueOf(ilkbutonelemanlari) + " " + ilkbutonbilgiler[1]);
                                            yazilacaktext = ("hareket: " + tempforsecilenid + " konumundan " + b.getName() + " konumuna gerçekleşmişir. işlem sonucu beyaz taş kırılmıştır\n");
                                            d.yaz("hareketler.", yazilacaktext);
                                        }
                                    } else {
                                        int kirikbeyazlar = Integer.parseInt(kirikbeyazsayisi.getText());
                                        kirikbeyazlar++;
                                        kirikbeyazsayisi.setText(String.valueOf(kirikbeyazlar));
                                        String yazilacaktext = ("hareket: " + tempforsecilenid + " konumundan " + b.getName() + " konumuna gerçekleşmişir. işlem sonucu beyaz taş kırılmıştır\n");
                                        d.yaz("hareketler.", yazilacaktext);
                                    }
                                    butonsifirla();
                                    secilensayisi = 0;
                                } else {
                                    JOptionPane.showMessageDialog(null, "geçersiz hamle");
                                    butonsifirla();
                                    String yazilacaktext = ("hareket geçersizdir \n");
                                    try {
                                        d.yaz("hareketler.", yazilacaktext);
                                    } catch (IOException ex) {
                                        Logger.getLogger(Board.class.getName()).log(Level.SEVERE, null, ex);
                                    }
                                    secilensayisi = 0;
                                }

                            } else // eğer siyah renkli eleman varsa
                            {
                                if (kiriksiyahsayisi.getText().equals("-")) {
                                    if (hareketkontrol(Integer.parseInt(zar1label.getText()), Integer.parseInt(zar2label.getText()), buttons[secilenilkelemanid], b)) {
                                        kiriksiyahsayisi.setText("1");
                                        b.setText(String.valueOf(1) + " " + "beyaz");
                                        labels[Integer.parseInt(b.getName()) - 1].setText(String.valueOf(1) + " " + "beyaz");
                                        String yazilacaktext = ("hareket: " + tempforsecilenid + " konumundan " + b.getName() + " konumuna gerçekleşmişir. işlem sonucu siyah taş kırılmıştır.\n");
                                        d.yaz("hareketler.", yazilacaktext);
                                        if (ilkbutonelemanlari == 1) {// ilk secilende tek bir tane renkli eleman varsa 
                                            buttons[secilenilkelemanid].setText("0");
                                            labels[secilenilkelemanid].setText("0");
                                        } else {
                                            ilkbutonelemanlari--;
                                            buttons[secilenilkelemanid].setText(String.valueOf(ilkbutonelemanlari) + " " + ilkbutonbilgiler[1]);
                                            labels[secilenilkelemanid].setText(String.valueOf(ilkbutonelemanlari) + " " + ilkbutonbilgiler[1]);
                                        }
                                    } else {
                                        int kiriksiyahlar = Integer.parseInt(kiriksiyahsayisi.getText());
                                        kiriksiyahlar++;
                                        kiriksiyahsayisi.setText(String.valueOf(kiriksiyahlar));

                                    }
                                    butonsifirla();
                                    secilensayisi = 0;
                                } else {
                                    JOptionPane.showMessageDialog(null, "geçersiz hamle");
                                    butonsifirla();
                                    secilensayisi = 0;
                                    String yazilacaktext = ("hareket geçersizdir \n");
                                    try {
                                        d.yaz("hareketler.", yazilacaktext);
                                    } catch (IOException ex) {
                                        Logger.getLogger(Board.class.getName()).log(Level.SEVERE, null, ex);
                                    }
                                }
                            }

                        } else {
                            JOptionPane.showMessageDialog(null, "burada kapı var kıramazsın!");
                            butonsifirla();
                            String yazilacaktext = ("hareket geçersizdir kapı kırılmaya çalışıldı \n");
                            try {
                                d.yaz("hareketler.", yazilacaktext);
                            } catch (IOException ex) {
                                Logger.getLogger(Board.class.getName()).log(Level.SEVERE, null, ex);
                            }
                            secilensayisi = 0;
                        }
                } else if (ilkbutonelemanlari == 1) {// ilk butonda tek eleman varsa

                    ilkbutonelemanlari = 0;
                    // text ayarlama 
                    if (hareketkontrol(Integer.parseInt(zar1label.getText()), Integer.parseInt(zar2label.getText()), buttons[secilenilkelemanid], b)) {
                        buttons[secilenilkelemanid].setText("0");
                        labels[secilenilkelemanid].setText("0");
                        String yazilacaktext = ("hareket: " + tempforsecilenid + " konumundan " + b.getName() + " konumuna gerçekleşmişir.\n");
                        d.yaz("hareketler.", yazilacaktext);
                        // ikinci elemanın text ayarı
                        b.setText(String.valueOf(ilkbutonelemanlari + 1) + " " + ilkbutonbilgiler[1]);
                        labels[Integer.parseInt(b.getName()) - 1].setText(String.valueOf(ilkbutonelemanlari + 1) + " " + ilkbutonbilgiler[1]);
                        butonsifirla();
                        secilensayisi = 0;
                    } else {
                        JOptionPane.showMessageDialog(null, "geçersiz hamle");
                        butonsifirla();
                        secilensayisi = 0;
                        String yazilacaktext = ("hareket geçersizdir \n");
                        try {
                            d.yaz("hareketler.", yazilacaktext);
                        } catch (IOException ex) {
                            Logger.getLogger(Board.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }

                } else // EĞER ilk butonda birden fazla eleman varsa
                {
                    if (hareketkontrol(Integer.parseInt(zar1label.getText()), Integer.parseInt(zar2label.getText()), buttons[secilenilkelemanid], b)) {
                        ilkbutonelemanlari--;

                        buttons[secilenilkelemanid].setText(String.valueOf(ilkbutonelemanlari) + " " + ilkbutonbilgiler[1]);
                        labels[secilenilkelemanid].setText(String.valueOf(ilkbutonelemanlari) + " " + ilkbutonbilgiler[1]);
                        b.setText(String.valueOf(1) + " " + ilkbutonbilgiler[1]);
                        labels[Integer.parseInt(b.getName()) - 1].setText(String.valueOf(1) + " " + ilkbutonbilgiler[1]);
                        butonsifirla();
                        secilensayisi = 0;
                        String yazilacaktext = ("hareket: " + tempforsecilenid + " konumundan " + b.getName() + " konumuna gerçekleşmişir.\n");
                        d.yaz("hareketler.", yazilacaktext);
                    } else {
                        JOptionPane.showMessageDialog(null, "geçersiz hamle");
                        butonsifirla();
                        secilensayisi = 0;
                        String yazilacaktext = ("hareket geçersizdir \n");
                        try {
                            d.yaz("hareketler.", yazilacaktext);
                        } catch (IOException ex) {
                            Logger.getLogger(Board.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }
                }
            }
        } else {
            butonsifirla();
            secilensayisi = 0;
        }
        String konumlar = null;
        for (int i = 0; i < buttons.length; i++) {
            konumlar += "\n" + buttons[i].getText() + "\n";
        }
        d.kayitsizyaz("hareketlikonumlar.", konumlar);
    }

    /**
     *
     * @return
     */
    public boolean zarkontrol() {
        if (zaratimsayisi == 0 || sirakimde.getText().equals("-")) {
            butonsifirla();
            return false;
        }

        return true;
    }

    public boolean buttonkontrol(JToggleButton b) {//içeride tek eleman varsa false veriyor
        String a = b.getText();
        String[] aa = new String[2];
        a = b.getText();
        aa = a.split(" ");
        if (aa.length == 1) {
            return false;
        } else { // 2 ise uzunluk true 
            return true;
        }
    }

//    public boolean hareketkontrol(int zar1, int zar2, JToggleButton b1) {
//String sirakimin = sirakimde.getText();
//        int hareketsayisi = 0;
//
//        if (zar1 == zar2) {
//            int buton1;
//            buton1 = Integer.parseInt(b1.getName());
//            
//
//            int fark = buton1 - buton2;
//            if (fark < 0) {
//                fark *= -1;
//            }
//            while (hareketsayisi <= 3) {
//                if (zar1 == fark) {
//                    hareketsayisi++;
//                    return true;
//                } else if (zar2 == fark) {
//                    hareketsayisi++;
//                    return true;
//                } else {
//                    return false;
//                }
//            }
//        } else {
//            int buton1, 
//            buton1 = Integer.parseInt(b1.getName());
//            
//            int fark = buton1 - buton2;
//            while (hareketsayisi <= 1) {
//                if (zar1 == fark) {
//                    hareketsayisi++;
//                    return true;
//                } else if (zar2 == fark) {
//                    hareketsayisi++;
//                    return true;
//                } else {
//                    return false;
//                }
//            }
//        }
//        return false;
//    }
    int hareketsayisi = 0;
    int zarsayisi = zaratimsayisi;

    public boolean hareketkontrol(int zar1, int zar2, JToggleButton b1, JToggleButton b2) {
        int hamlesayisi = Integer.parseInt(kalanhamlelabel.getText());
        while (hamlesayisi != 0) {
            int buton1, buton2;
            buton1 = Integer.parseInt(b1.getName());
            buton2 = Integer.parseInt(b2.getName());

            int fark = buton1 - buton2;
            if (fark < 0) {
                fark = fark * -1;
            }
            if (zar1 == fark || zar2 == fark) {
                hareketsayisi++;
                hamlesayisi--;
                kalanhamlelabel.setText(String.valueOf(hamlesayisi));
                return true;
            } else {
                return false;
            }
        }
        return false;
    }

    public boolean kirikkontrol(String renk) {// kırık varsa true döner
        if (renk.equals("beyaz")) {
            if (!kirikbeyazsayisi.getText().equals("-")) {
                return true;
            } else {
                return false;
            }
        } else if (renk.equals("siyah")) {
            if (!kiriksiyahsayisi.getText().equals("-")) {
                return true;
            } else {
                return false;
            }
        } else {
            return false;
        }
    }

    public void kiriklihareket(JToggleButton b) throws IOException {
        Dosya d = new Dosya();
        int hamlesayisi = Integer.parseInt(kalanhamlelabel.getText());
        int zar1 = Integer.parseInt(zar1label.getText());
        int zar2 = Integer.parseInt(zar2label.getText());
        int kiriksiyah = 0;
        int kirikbeyaz = 0;
        if (kiriksiyahsayisi.getText().equals("-")) {
            kiriksiyah = 0;
        } else {
            kiriksiyah = Integer.parseInt(kiriksiyahsayisi.getText());
        }
        if (kirikbeyazsayisi.getText().equals("-")) {
            kirikbeyaz = 0;
        } else {
            kirikbeyaz = Integer.parseInt(kirikbeyazsayisi.getText());
        }

        while (hamlesayisi != 0) {
            if (sirakimde.getText().equals("siyah")) {
                //sıra siyahta
                if (buttons[zar1 - 1].getName().equals(String.valueOf(zar1)) || buttons[zar2 - 1].getName().equals(String.valueOf(zar2))) {
                    if (b.getText().split(" ").length == 1) {
                        //System.out.println(b.getText());
                        // içeride hiç eleman yoksa
                        b.setText(1 + " " + "siyah");
                        labels[Integer.valueOf(b.getName()) - 1].setText("1 siyah");
                        String yazilacaktext = ("hareket: kırık siyah taş " + b.getName() + " konumuna alınmıştır.\n");
                        d.yaz("hareketler.", yazilacaktext);
                        kiriksiyah--;
                        if (kiriksiyah == 0) {
                            kiriksiyahsayisi.setText("-");
                            yazilacaktext = ("kırık siyah kalmamıştır.\n");
                            d.yaz("hareketler.", yazilacaktext);
                            butonsifirla();
                            break;
                        } else {
                            kiriksiyahsayisi.setText(String.valueOf(kiriksiyah));
                            yazilacaktext = ("kalan kırık siyah sayısı =" + kiriksiyahsayisi.getText() + " .\n");
                            d.yaz("hareketler.", yazilacaktext);
                        }
                        butonsifirla();
                        hamlesayisi--;
                        kalanhamlelabel.setText(String.valueOf(hamlesayisi));
                        if (kirikkontrol(sirakimde.getText())) {
                            continue;
                        } else {
                            break;
                        }

                    } else {
                        int temp = 0;
                        //System.out.println(b.getText());
                        // b de birden fazla eleman varsa 
                        if (buttons[zar1 - 1].getText().split(" ")[1].equals("siyah")) {
                            // eğer içerideki eleman siyah ise
                            //System.out.println(b.getText());
                            int elemansayisi = Integer.parseInt(b.getText().split(" ")[0]);
                            elemansayisi++;
                            kiriksiyah--;
                            if (kiriksiyah == 0) {
                                kiriksiyahsayisi.setText("-");
                                String yazilacaktext = (" kırık siyah kalmadı .\n");
                                d.yaz("hareketler.", yazilacaktext);
                                butonsifirla();
                                break;
                            } else {
                                kiriksiyahsayisi.setText(String.valueOf(kiriksiyah));
                                String yazilacaktext = ("kalan kırık siyah sayısı =" + kiriksiyahsayisi.getText() + " .\n");
                                d.yaz("hareketler.", yazilacaktext);
                            }
                            b.setText(elemansayisi + " " + "siyah");
                            labels[Integer.valueOf(b.getName()) - 1].setText(elemansayisi + " " + "siyah");
                            String yazilacaktext = ("kırık siyah " + b.getName() + " konumnuna geçmiştir.\n");
                            d.yaz("hareketler.", yazilacaktext);
                            butonsifirla();
                            hamlesayisi--;
                            kalanhamlelabel.setText(String.valueOf(hamlesayisi));
                        } else {
                            int elemansayisi = Integer.parseInt(b.getText().split(" ")[0]);
                            if (elemansayisi == 1) {
                                b.setText("1 siyah");
                                labels[Integer.valueOf(b.getName()) - 1].setText("1 siyah");
                                kirikbeyaz++;
                                kirikbeyazsayisi.setText(String.valueOf(kirikbeyaz));
                                kiriksiyah--;
                                if (kiriksiyah == 0) {
                                    kiriksiyahsayisi.setText("-");
                                    String yazilacaktext = (" kırık siyah kalmadı .\n");
                                    d.yaz("hareketler.", yazilacaktext);
                                    butonsifirla();
                                    break;
                                } else {
                                    String yazilacaktext = ("kalan kırık siyah sayısı =" + kiriksiyahsayisi.getText() + " .\n");
                                    d.yaz("hareketler.", yazilacaktext);
                                    kiriksiyahsayisi.setText(String.valueOf(kiriksiyah));
                                }
                                butonsifirla();
                                hamlesayisi--;
                                kalanhamlelabel.setText(String.valueOf(hamlesayisi));
                            } else {
                                JOptionPane.showMessageDialog(rootPane, "burada kapı var kıramazsın!");
                                String yazilacaktext = (" kapı olan yer kırılmaya çalışıldı. gerçersiz hamle.\n");
                                d.yaz("hareketler.", yazilacaktext);
                                butonsifirla();
                                break;
                            }
                        }
                    }
                } else {
                    JOptionPane.showMessageDialog(rootPane, "BURAYA ERİŞİM HAKKIN YOK!");
                    String yazilacaktext = (" erişim hakkı bulunmayan yere gidilmeye çalışıldı.\n");
                    d.yaz("hareketler.", yazilacaktext);
                    butonsifirla();
                    break;
                }
            } else// sira beyazda ise
             if (zar1 == 6 || zar2 == 6) {
                    if (buttons[18].isSelected()) {// seçili mi değil mi
                        if (b.getText().split(" ").length == 1) {
                            // içeride hiç eleman yoksa
                            b.setText(1 + " " + "beyaz");
                            labels[Integer.valueOf(b.getName()) - 1].setText(1 + " " + "beyaz");
                            String yazilacaktext = (" kırık beyaz " + b.getName() + "konumuna alındı.\n");
                            d.yaz("hareketler.", yazilacaktext);
                            kirikbeyaz--;
                            if (kirikbeyaz == 0) {
                                kirikbeyazsayisi.setText("-");
                                yazilacaktext = (" kırık beyaz kalmadı .\n");
                                d.yaz("hareketler.", yazilacaktext);
                                butonsifirla();
                                break;
                            } else {
                                kirikbeyazsayisi.setText(String.valueOf(kirikbeyaz));
                                yazilacaktext = (" kalan kırık beyaz sayısı: " + kirikbeyazsayisi.getText() + ".\n");
                                d.yaz("hareketler.", yazilacaktext);
                            }
                            butonsifirla();
                            hamlesayisi--;
                            kalanhamlelabel.setText(String.valueOf(hamlesayisi));
                        } else {
                            int temp = 0;
                            // b de birden fazla eleman varsa 
                            if (b.getText().split(" ")[1].equals("beyaz")) {
                                // eğer içerideki eleman beyaz ise
                                int elemansayisi = Integer.parseInt(b.getText().split(" ")[0]);
                                elemansayisi++;
                                kirikbeyaz--;
                                if (kirikbeyaz == 0) {
                                    kirikbeyazsayisi.setText("-");
                                    String yazilacaktext = (" kırık beyaz kalmadı .\n");
                                    d.yaz("hareketler.", yazilacaktext);
                                    butonsifirla();
                                    break;
                                } else {
                                    kirikbeyazsayisi.setText(String.valueOf(kirikbeyaz));
                                    String yazilacaktext = (" kalan kırık beyaz sayısı: " + kirikbeyazsayisi.getText() + ".\n");
                                    d.yaz("hareketler.", yazilacaktext);
                                }
                                b.setText(elemansayisi + " " + "beyaz");
                                labels[Integer.valueOf(b.getName()) - 1].setText(elemansayisi + " " + "beyaz");
                                String yazilacaktext = (" kırık beyaz " + b.getName() + "konumuna alındı.\n");
                                d.yaz("hareketler.", yazilacaktext);
                                butonsifirla();
                                hamlesayisi--;
                                kalanhamlelabel.setText(String.valueOf(hamlesayisi));
                            } else {
                                int elemansayisi = Integer.parseInt(b.getText().split(" ")[0]);
                                if (elemansayisi == 1) {
                                    b.setText("1 beyaz");
                                    labels[Integer.valueOf(b.getName()) - 1].setText("1 beyaz");
                                    kiriksiyah++;
                                    kirikbeyazsayisi.setText(String.valueOf(kiriksiyah));
                                    kirikbeyaz--;
                                    if (kiriksiyah == 0) {
                                        kirikbeyazsayisi.setText("-");
                                        butonsifirla();
                                        break;
                                    } else {
                                        kirikbeyazsayisi.setText(String.valueOf(kirikbeyaz));
                                    }
                                    butonsifirla();
                                    hamlesayisi--;
                                    kalanhamlelabel.setText(String.valueOf(hamlesayisi));
                                } else {
                                    JOptionPane.showMessageDialog(rootPane, "burada kapı var kıramazsın!");
                                    butonsifirla();
                                    break;
                                }
                            }
                        }
                    } else {
                        JOptionPane.showMessageDialog(rootPane, "BURAYA ERİŞİM HAKKIN YOK!");
                        butonsifirla();
                        break;
                    }
                } else if (zar1 == 5 || zar2 == 5) {
                    if (buttons[19].isSelected()) {// seçili mi değil mi
                        if (b.getText().split(" ").length == 1) {
                            // içeride hiç eleman yoksa
                            b.setText(1 + " " + "beyaz");
                            labels[Integer.valueOf(b.getName()) - 1].setText("1 beyaz");
                            kirikbeyaz--;
                            if (kirikbeyaz == 0) {
                                kirikbeyazsayisi.setText("-");
                                butonsifirla();
                                break;
                            } else {
                                kirikbeyazsayisi.setText(String.valueOf(kiriksiyah));
                            }
                            butonsifirla();
                            hamlesayisi--;
                            kalanhamlelabel.setText(String.valueOf(hamlesayisi));
                        } else {
                            int temp = 0;
                            // b de birden fazla eleman varsa 
                            if (b.getText().split(" ")[1].equals("beyaz")) {
                                // eğer içerideki eleman beyaz ise
                                int elemansayisi = Integer.parseInt(b.getText().split(" ")[0]);
                                elemansayisi++;
                                kirikbeyaz--;
                                if (kirikbeyaz == 0) {
                                    kirikbeyazsayisi.setText("-");
                                    butonsifirla();
                                    break;
                                } else {
                                    kirikbeyazsayisi.setText(String.valueOf(kiriksiyah));
                                }
                                b.setText(elemansayisi + " " + "beyaz");
                                labels[Integer.valueOf(b.getName()) - 1].setText(elemansayisi + " " + "beyaz");
                                butonsifirla();
                                hamlesayisi--;
                                kalanhamlelabel.setText(String.valueOf(hamlesayisi));
                            } else {
                                int elemansayisi = Integer.parseInt(b.getText().split(" ")[0]);
                                if (elemansayisi == 1) {
                                    b.setText("1 beyaz");
                                    labels[Integer.valueOf(b.getName()) - 1].setText("1 beyaz");
                                    kiriksiyah++;
                                    kirikbeyazsayisi.setText(String.valueOf(kiriksiyah));
                                    kirikbeyaz--;
                                    if (kiriksiyah == 0) {
                                        kirikbeyazsayisi.setText("-");
                                        butonsifirla();
                                        break;
                                    } else {
                                        kirikbeyazsayisi.setText(String.valueOf(kirikbeyaz));
                                    }
                                    butonsifirla();
                                    hamlesayisi--;
                                    kalanhamlelabel.setText(String.valueOf(hamlesayisi));
                                } else {
                                    JOptionPane.showMessageDialog(rootPane, "burada kapı var kıramazsın!");
                                    butonsifirla();
                                    break;
                                }
                            }
                        }
                    } else {
                        JOptionPane.showMessageDialog(rootPane, "BURAYA ERİŞİM HAKKIN YOK!");
                        butonsifirla();
                        break;
                    }
                } else if (zar1 == 4 || zar2 == 4) {
                    if (buttons[20].isSelected()) {// seçili mi değil mi
                        if (b.getText().split(" ").length == 1) {
                            // içeride hiç eleman yoksa
                            b.setText(1 + " " + "beyaz");
                            labels[Integer.valueOf(b.getName()) - 1].setText("1 beyaz");
                            kirikbeyaz--;
                            if (kirikbeyaz == 0) {
                                kirikbeyazsayisi.setText("-");
                                butonsifirla();
                                break;
                            } else {
                                kirikbeyazsayisi.setText(String.valueOf(kiriksiyah));
                            }
                            butonsifirla();
                            hamlesayisi--;
                            kalanhamlelabel.setText(String.valueOf(hamlesayisi));
                        } else {
                            int temp = 0;
                            // b de birden fazla eleman varsa 
                            if (b.getText().split(" ")[1].equals("beyaz")) {
                                // eğer içerideki eleman beyaz ise
                                int elemansayisi = Integer.parseInt(b.getText().split(" ")[0]);
                                elemansayisi++;
                                kirikbeyaz--;
                                if (kirikbeyaz == 0) {
                                    kirikbeyazsayisi.setText("-");
                                    butonsifirla();
                                    break;
                                } else {
                                    kirikbeyazsayisi.setText(String.valueOf(kiriksiyah));
                                }
                                b.setText(elemansayisi + " " + "beyaz");
                                labels[Integer.valueOf(b.getName()) - 1].setText(elemansayisi + " " + "beyaz");
                                butonsifirla();
                                hamlesayisi--;
                                kalanhamlelabel.setText(String.valueOf(hamlesayisi));
                            } else {
                                int elemansayisi = Integer.parseInt(b.getText().split(" ")[0]);
                                if (elemansayisi == 1) {
                                    b.setText("1 beyaz");
                                    labels[Integer.valueOf(b.getName()) - 1].setText("1 beyaz");
                                    kiriksiyah++;
                                    kirikbeyazsayisi.setText(String.valueOf(kiriksiyah));
                                    kirikbeyaz--;
                                    if (kiriksiyah == 0) {
                                        kirikbeyazsayisi.setText("-");
                                        butonsifirla();
                                        break;
                                    } else {
                                        kirikbeyazsayisi.setText(String.valueOf(kirikbeyaz));
                                    }
                                    butonsifirla();
                                    hamlesayisi--;
                                    kalanhamlelabel.setText(String.valueOf(hamlesayisi));
                                } else {
                                    JOptionPane.showMessageDialog(rootPane, "burada kapı var kıramazsın!");
                                    butonsifirla();
                                    break;
                                }
                            }
                        }
                    } else {
                        JOptionPane.showMessageDialog(rootPane, "BURAYA ERİŞİM HAKKIN YOK!");
                        butonsifirla();
                        break;
                    }
                } else if (zar1 == 3 || zar2 == 3) {
                    if (buttons[21].isSelected()) {// seçili mi değil mi
                        if (b.getText().split(" ").length == 1) {
                            // içeride hiç eleman yoksa
                            b.setText(1 + " " + "beyaz");
                            labels[Integer.valueOf(b.getName()) - 1].setText("1 beyaz");
                            kirikbeyaz--;
                            if (kirikbeyaz == 0) {
                                kirikbeyazsayisi.setText("-");
                                butonsifirla();
                                break;
                            } else {
                                kirikbeyazsayisi.setText(String.valueOf(kiriksiyah));
                            }
                            butonsifirla();
                            hamlesayisi--;
                            kalanhamlelabel.setText(String.valueOf(hamlesayisi));
                        } else {
                            int temp = 0;
                            // b de birden fazla eleman varsa 
                            if (b.getText().split(" ")[1].equals("beyaz")) {
                                // eğer içerideki eleman beyaz ise
                                int elemansayisi = Integer.parseInt(b.getText().split(" ")[0]);
                                elemansayisi++;
                                kirikbeyaz--;
                                if (kirikbeyaz == 0) {
                                    kirikbeyazsayisi.setText("-");
                                    butonsifirla();
                                    break;
                                } else {
                                    kirikbeyazsayisi.setText(String.valueOf(kiriksiyah));
                                }
                                b.setText(elemansayisi + " " + "beyaz");
                                labels[Integer.valueOf(b.getName()) - 1].setText(elemansayisi + " " + "beyaz");
                                butonsifirla();
                                hamlesayisi--;
                                kalanhamlelabel.setText(String.valueOf(hamlesayisi));
                            } else {
                                int elemansayisi = Integer.parseInt(b.getText().split(" ")[0]);
                                if (elemansayisi == 1) {
                                    b.setText("1 beyaz");
                                    labels[Integer.valueOf(b.getName()) - 1].setText("1 beyaz");
                                    kiriksiyah++;
                                    kirikbeyazsayisi.setText(String.valueOf(kiriksiyah));
                                    kirikbeyaz--;
                                    if (kiriksiyah == 0) {
                                        kirikbeyazsayisi.setText("-");
                                        butonsifirla();
                                        break;
                                    } else {
                                        kirikbeyazsayisi.setText(String.valueOf(kirikbeyaz));
                                    }
                                    butonsifirla();
                                    hamlesayisi--;
                                    kalanhamlelabel.setText(String.valueOf(hamlesayisi));
                                } else {
                                    JOptionPane.showMessageDialog(rootPane, "burada kapı var kıramazsın!");
                                    butonsifirla();
                                    break;
                                }
                            }
                        }
                    } else {
                        JOptionPane.showMessageDialog(rootPane, "BURAYA ERİŞİM HAKKIN YOK!");
                        butonsifirla();
                        break;
                    }
                } else if (zar1 == 2 || zar2 == 2) {
                    if (buttons[22].isSelected()) {// seçili mi değil mi
                        if (b.getText().split(" ").length == 1) {
                            // içeride hiç eleman yoksa
                            b.setText(1 + " " + "beyaz");
                            labels[Integer.valueOf(b.getName()) - 1].setText("1 beyaz");
                            kirikbeyaz--;
                            if (kirikbeyaz == 0) {
                                kirikbeyazsayisi.setText("-");
                                butonsifirla();
                                break;
                            } else {
                                kirikbeyazsayisi.setText(String.valueOf(kiriksiyah));
                            }
                            butonsifirla();
                            hamlesayisi--;
                            kalanhamlelabel.setText(String.valueOf(hamlesayisi));
                        } else {
                            int temp = 0;
                            // b de birden fazla eleman varsa 
                            if (b.getText().split(" ")[1].equals("beyaz")) {
                                // eğer içerideki eleman beyaz ise
                                int elemansayisi = Integer.parseInt(b.getText().split(" ")[0]);
                                elemansayisi++;
                                kirikbeyaz--;
                                if (kirikbeyaz == 0) {
                                    kirikbeyazsayisi.setText("-");
                                    butonsifirla();
                                    break;
                                } else {
                                    kirikbeyazsayisi.setText(String.valueOf(kiriksiyah));
                                }
                                b.setText(elemansayisi + " " + "beyaz");
                                labels[Integer.valueOf(b.getName()) - 1].setText(elemansayisi + " " + "beyaz");
                                butonsifirla();
                                hamlesayisi--;
                                kalanhamlelabel.setText(String.valueOf(hamlesayisi));
                            } else {
                                int elemansayisi = Integer.parseInt(b.getText().split(" ")[0]);
                                if (elemansayisi == 1) {
                                    b.setText("1 beyaz");
                                    labels[Integer.valueOf(b.getName()) - 1].setText("1 beyaz");
                                    kiriksiyah++;
                                    kirikbeyazsayisi.setText(String.valueOf(kiriksiyah));
                                    kirikbeyaz--;
                                    if (kiriksiyah == 0) {
                                        kirikbeyazsayisi.setText("-");
                                        butonsifirla();
                                        break;
                                    } else {
                                        kirikbeyazsayisi.setText(String.valueOf(kirikbeyaz));
                                    }
                                    butonsifirla();
                                    hamlesayisi--;
                                    kalanhamlelabel.setText(String.valueOf(hamlesayisi));
                                } else {
                                    JOptionPane.showMessageDialog(rootPane, "burada kapı var kıramazsın!");
                                    butonsifirla();
                                    break;
                                }
                            }
                        }
                    } else {
                        JOptionPane.showMessageDialog(rootPane, "BURAYA ERİŞİM HAKKIN YOK!");
                        butonsifirla();
                        break;
                    }
                } else if (zar1 == 1 || zar2 == 1) {
                    if (buttons[23].isSelected()) {// seçili mi değil mi
                        if (b.getText().split(" ").length == 1) {
                            // içeride hiç eleman yoksa
                            b.setText(1 + " " + "beyaz");
                            labels[Integer.valueOf(b.getName()) - 1].setText("1 beyaz");
                            kirikbeyaz--;
                            if (kirikbeyaz == 0) {
                                kirikbeyazsayisi.setText("-");
                                butonsifirla();
                                break;
                            } else {
                                kirikbeyazsayisi.setText(String.valueOf(kirikbeyaz));
                            }
                            butonsifirla();
                            hamlesayisi--;
                            kalanhamlelabel.setText(String.valueOf(hamlesayisi));
                        } else {
                            int temp = 0;
                            // b de birden fazla eleman varsa 
                            if (b.getText().split(" ")[1].equals("beyaz")) {
                                // eğer içerideki eleman beyaz ise
                                int elemansayisi = Integer.parseInt(b.getText().split(" ")[0]);
                                elemansayisi++;
                                kirikbeyaz--;
                                if (kirikbeyaz == 0) {
                                    kirikbeyazsayisi.setText("-");
                                    butonsifirla();
                                    break;
                                } else {
                                    kirikbeyazsayisi.setText(String.valueOf(kirikbeyaz));
                                }
                                b.setText(elemansayisi + " " + "beyaz");
                                labels[Integer.valueOf(b.getName()) - 1].setText(elemansayisi + " " + "beyaz");
                                butonsifirla();
                                hamlesayisi--;
                                kalanhamlelabel.setText(String.valueOf(hamlesayisi));
                            } else {
                                int elemansayisi = Integer.parseInt(b.getText().split(" ")[0]);
                                if (elemansayisi == 1) {
                                    b.setText("1 beyaz");
                                    labels[Integer.valueOf(b.getName()) - 1].setText("1 beyaz");
                                    kiriksiyah++;
                                    kirikbeyazsayisi.setText(String.valueOf(kiriksiyah));
                                    kirikbeyaz--;
                                    if (kiriksiyah == 0) {
                                        kirikbeyazsayisi.setText("-");
                                        butonsifirla();
                                        break;
                                    } else {
                                        kirikbeyazsayisi.setText(String.valueOf(kirikbeyaz));
                                    }
                                    butonsifirla();
                                    hamlesayisi--;
                                    kalanhamlelabel.setText(String.valueOf(hamlesayisi));
                                } else {
                                    JOptionPane.showMessageDialog(rootPane, "burada kapı var kıramazsın!");
                                    butonsifirla();
                                    break;
                                }
                            }
                        }
                    } else {
                        JOptionPane.showMessageDialog(rootPane, "BURAYA ERİŞİM HAKKIN YOK!");
                        butonsifirla();
                        break;
                    }
                }

        }

    }

    public void butonsifirla() {
        for (JToggleButton button : buttons) {
            button.setSelected(false);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ZarAtbuton;
    private javax.swing.JToggleButton buton1;
    private javax.swing.JToggleButton buton10;
    private javax.swing.JToggleButton buton11;
    private javax.swing.JToggleButton buton12;
    private javax.swing.JToggleButton buton13;
    private javax.swing.JToggleButton buton14;
    private javax.swing.JToggleButton buton15;
    private javax.swing.JToggleButton buton16;
    private javax.swing.JToggleButton buton17;
    private javax.swing.JToggleButton buton18;
    private javax.swing.JToggleButton buton19;
    private javax.swing.JToggleButton buton2;
    private javax.swing.JToggleButton buton20;
    private javax.swing.JToggleButton buton21;
    private javax.swing.JToggleButton buton22;
    private javax.swing.JToggleButton buton23;
    private javax.swing.JToggleButton buton24;
    private javax.swing.JToggleButton buton3;
    private javax.swing.JToggleButton buton4;
    private javax.swing.JToggleButton buton5;
    private javax.swing.JToggleButton buton6;
    private javax.swing.JToggleButton buton7;
    private javax.swing.JToggleButton buton8;
    private javax.swing.JToggleButton buton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel kalanhamlelabel;
    private javax.swing.JLabel kirikbeyazsayisi;
    private javax.swing.JLabel kiriksiyahsayisi;
    private javax.swing.JLabel numara1;
    private javax.swing.JLabel numara10;
    private javax.swing.JLabel numara11;
    private javax.swing.JLabel numara12;
    private javax.swing.JLabel numara13;
    private javax.swing.JLabel numara14;
    private javax.swing.JLabel numara15;
    private javax.swing.JLabel numara16;
    private javax.swing.JLabel numara17;
    private javax.swing.JLabel numara18;
    private javax.swing.JLabel numara19;
    private javax.swing.JLabel numara2;
    private javax.swing.JLabel numara20;
    private javax.swing.JLabel numara21;
    private javax.swing.JLabel numara22;
    private javax.swing.JLabel numara23;
    private javax.swing.JLabel numara24;
    private javax.swing.JLabel numara3;
    private javax.swing.JLabel numara4;
    private javax.swing.JLabel numara5;
    private javax.swing.JLabel numara6;
    private javax.swing.JLabel numara7;
    private javax.swing.JLabel numara8;
    private javax.swing.JLabel numara9;
    private javax.swing.JLabel sirakimde;
    private javax.swing.JButton toplamabutonu;
    private javax.swing.JLabel toplananbeyazlar;
    private javax.swing.JLabel toplanansiyahlar;
    private javax.swing.JLabel zar1;
    private javax.swing.JLabel zar1label;
    private javax.swing.JLabel zar2;
    private javax.swing.JLabel zar2label;
    // End of variables declaration//GEN-END:variables
}
